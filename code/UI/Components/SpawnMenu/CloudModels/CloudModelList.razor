@using System.Threading.Tasks;
@using Sandbox;
@using Sandbox.UI;
@inherits Panel
@namespace Scenebox
@attribute [StyleSheet]

<root class="spawnpage columned">
    <div class="search-container">
        <TextEntry @ref="SearchEntry" OnTextEdited=@Search Placeholder="Search..." />

    </div>
    <div class="canvas">
        @foreach (var group in FoundPackages.GroupBy(GroupBy).OrderBy(x => x.Key))
        {
            if (!string.IsNullOrEmpty(group.Key))
            {
                <h1>@group.Key[2..]</h1>
            }

            foreach (var package in group)
            {
                if (package == null) continue;
                <CloudModelEntry Package=@package />
            }
        }
    </div>
</root>

@code
{
    TextEntry SearchEntry;
    string SelectedFolder = "";
    string SearchQuery = "";
    string Group = "";
    public int Take = 100;
    public int Skip = 0;
    public Package[] FoundPackages { get; set; }

    protected override void OnAfterTreeRender(bool firstTime)
    {
        if (firstTime)
        {
            Search("");
        }
    }

    void OnFolderSelect(string folderPath)
    {
        SelectedFolder = folderPath;
        Search(SearchQuery);
    }

    void ResetFolder()
    {
        SelectedFolder = "";
        Search(SearchQuery);
    }

    void Search(string value)
    {
        SearchQuery = value;

        RunQuery();
    }

    async void RunQuery()
    {
        var myQuery = "type:model " + SearchQuery;
        var query = myQuery;

        var result = await Package.FindAsync(query, Take, Skip);

        if (query != myQuery) return;

        List<Package> packages = new();
        if (result != null)
        {
            packages = result.Packages.ToList();
        }

        var split = myQuery.Split(' ');
        var ident = split.FirstOrDefault(x => !x.Contains(":") && x.Contains("."));
        if (ident != null)
        {
            packages.Add(await Package.FetchAsync(ident, true));
        }

        FoundPackages = packages.ToArray();
        StateHasChanged();
    }

    string GroupBy(Package p)
    {
        if (Group == "state")
        {
            if (p.Interaction.Favourite) return "0 You Love";
            if (p.Interaction.FirstUsed == null) return "1 You haven't played";
            if (p.Updated > p.Interaction.LastUsed) return "2 Updated since you last played";
            return "3 Everything Else";
        }

        return "";
    }
}